# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Count {
  followed: Float!
  followings: Float!
  posts: Float!
}

input CreateFollowInput {
  followedName: String!
  name: String!
}

input CreateForwardInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateLikeInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePostInput {
  content: String!
  userName: String!
}

input CreateReplyInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateStarInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateTagInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateUserInput {
  email: String!
  image: String!
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Forward {
  createdAt: DateTime!
  id: Float!
  postId: Float!
  replyId: Float!
  updatedAt: DateTime!
  userName: String!
}

type Like {
  createdAt: DateTime!
  id: Float!
  postId: Float!
  replyId: Float!
  updatedAt: DateTime!
  userName: String!
}

type Mutation {
  createFollow(createFollowInput: CreateFollowInput!): Boolean!
  createForward(createForwardInput: CreateForwardInput!): Forward!
  createLike(createLikeInput: CreateLikeInput!): Like!
  createPost(createPostInput: CreatePostInput!): Post!
  createReply(createReplyInput: CreateReplyInput!): Reply!
  createStar(createStarInput: CreateStarInput!): Star!
  createTag(createTagInput: CreateTagInput!): Tag!
  createUser(createUserInput: CreateUserInput!): User!
  removeFollow(removeFollowInput: CreateFollowInput!): Boolean!
  removeForward(id: Int!): Forward!
  removeLike(id: Int!): Like!
  removePost(id: Int!): Post!
  removeReply(id: Int!): Reply!
  removeStar(id: Int!): Star!
  removeTag(id: Int!): Tag!
  updateForward(updateForwardInput: UpdateForwardInput!): Forward!
  updateLike(updateLikeInput: UpdateLikeInput!): Like!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  updateReply(updateReplyInput: UpdateReplyInput!): Reply!
  updateStar(updateStarInput: UpdateStarInput!): Star!
  updateTag(updateTagInput: UpdateTagInput!): Tag!
}

type Post {
  content: String!
  createdAt: DateTime!
  id: Float!
  replys: [Reply!]
  tags: [Tag!]
  updatedAt: DateTime!
  user: User!
  userName: String!
}

type ProfileData {
  followed: [User!]!
  followings: [User!]!
  posts: [Post!]!
}

type Query {
  findAll: [Tag!]!
  findAllPost: [Post!]!
  findByAt(query: String!): [User!]!
  findFollowers(followedName: String!): [User!]!
  findFollowings(name: String!): [User!]!
  findHomePost(name: String!): [Post!]!
  findOne(id: Int!): Tag!
  findPostByTag(id: Float!): Post!
  findPostByUser(name: String!): [Post!]!
  followedCount(name: String!): Float!
  getPostById(id: Float!): Post!
  profileCount(name: String!): Count!
  profileData(name: String!): ProfileData!
  userData(name: String!): User!
}

type Reply {
  createdAt: DateTime!
  id: Float!
  postId: Float!
  posts: [Post!]!
  updatedAt: DateTime!
  user: User!
  userName: String!
}

type Star {
  createdAt: DateTime!
  id: Float!
  postId: Float!
  replyId: Float!
  updatedAt: DateTime!
  userName: String!
}

type Tag {
  createdAt: DateTime!
  id: Float!
  name: String!
  posts: [Post!]!
  updatedAt: DateTime!
}

input UpdateForwardInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateLikeInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePostInput {
  content: String
  id: Int!
  userName: String
}

input UpdateReplyInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateStarInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateTagInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type User {
  """createdTime"""
  createdAt: DateTime!

  """user email"""
  email: String!

  """user image"""
  image: String!

  """user name"""
  name: String!

  """user nickname"""
  nickName: String!
  posts: [Post!]!
  replys: [Reply!]!

  """updatedTime"""
  updatedAt: DateTime!
}